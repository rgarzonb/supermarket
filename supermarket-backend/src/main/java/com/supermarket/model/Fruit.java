package com.supermarket.model;

//import jakarta.persistence.Entity;
//import jakarta.persistence.Table;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

//import java.util.Date; // includes both date and time information
import java.time.LocalDate; // store only the date portion in the database without the time component
@AllArgsConstructor // Constructor that init all class fields
@NoArgsConstructor  // No-argument constructor
@Data               // Boilerplate code for common methods like getters, setters ...
@Entity             // Marks the class as a JPA (Java Persistence API) entity -> mapped to a DB table
@Table(name = "fruits")
public class Fruit {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // the value of id will be auto generated by the DB or JPA provider
    private long id;

    @Column(name="type")
    private String type;

    @Column(name="quantity")
    private int quantity;

    @Column(name="price")
    private double price;

    // @Temporal: date fields
//    @Temporal(TemporalType.TIMESTAMP) // date and time components
    @Temporal(TemporalType.DATE) // Only date
    @Column(name = "createdAt")
    private LocalDate createdAt;

    @Temporal(TemporalType.DATE) // Only date
    @Column(name = "updatedAt")
    private LocalDate updatedAt;

    @PrePersist
    protected void onCreate(){
        createdAt = LocalDate.now();
    }

    @PreUpdate
    protected void onUpdate(){
        updatedAt = LocalDate.now();
    }
}
